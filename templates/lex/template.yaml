AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  DbVectorS3:
    Type: String
  BedrockRegion:
    Type: String
  LexConfigBucketName:
    Type: String
    Default: 'lex-bot-config-bucket'
  LexConfigObjectKey:
    Type: String
    Default: 'voiceAssistantCAAB_voice-DRAFT-1VZESSQEEG-LexJson.zip'
  

Resources:
  GenAiLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../code/zip/bedrock.zip
      Handler: bedrock_call.handler
      Runtime: python3.9
      Policies: 
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Ref DbVectorS3
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 
              - bedrock:*
              Resource: '*'
      Environment:
        Variables:
          BEDROCK_REGION: !Ref BedrockRegion

  GenAiLambdaVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref GenAiLambda
      Description: v1

  GenAiLexCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: GenAiLexBotLogGroup

  GenAiLexBot:
    Type: AWS::Lex::Bot
    Properties:
      DataPrivacy:
          ChildDirected: false
      IdleSessionTTLInSeconds: 1800
      Name: GenAIBot
      RoleArn: !GetAtt GenAiLexBotRole.Arn
      BotFileS3Location:
        S3Bucket: !Ref LexConfigBucketName
        S3ObjectKey: !Ref LexConfigObjectKey             

  GenAiLexBotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LexRuntimeRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "polly:SynthesizeSpeech"
                Resource: "*"
        - PolicyName: LexLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt GenAiLexCloudWatchLogGroup.Arn

  GenAiLexBotAlias:
    Type: AWS::Lex::BotAlias
    Properties:
      BotAliasName: genAiLexBotAlias
      BotId: !Ref GenAiLexBot
      BotAliasLocaleSettings:
        - BotAliasLocaleSetting:
              Enabled: true
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: "1.0"
                  LambdaArn: !GetAtt GenAiLambda.Arn
          LocaleId: it_IT
      ConversationLogSettings:
        TextLogSettings: 
          - Destination:
              CloudWatch:
                CloudWatchLogGroupArn: !GetAtt GenAiLexCloudWatchLogGroup.Arn
                LogPrefix: gen-ai
            Enabled: true


Outputs:
  LexBotArn: 
    Value: !GetAtt GenAiLexBot.Arn
  LexBotAliasArn:
    Value: !GetAtt GenAiLexBotAlias.Arn



  